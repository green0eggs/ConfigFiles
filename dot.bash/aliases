
# command to check everything
hello() {
	# if linux: what kernel, if mac: what osx version
	if hash lsb_release 2>/dev/null; then
		swvers="$(lsb_release -sd)" 
	else
		swvers="$(sw_vers -productName) $(sw_vers -productVersion)"
	fi
	# a nice greeting
	printf "Hello, %s\n" $(whoami)
	printf "Today is\t%s\n" "$(date)"
	printf "You're using\t%s on %s\n" "$swvers" "$(hostname)"
	printf "Kernel version\t%s\n" "$(uname -r)"
	printf "Architecture\t%s\n" "$(arch)"
	printf "GCC version\t%s\n" "$(gcc -dumpversion)"
	printf "clang version\t" 
	clang -v 2>&1 | grep version | sed 's/.*version \([0-9]*.[0-9]*.[0-9]*\) .*/\1/g'
	printf "python3 version\t"
	# python -V and gch are a total pain and needs to have the stream
	# redirected also, it already terminates in a '\n' newline so just take
	# the output from sed
	sed 's/[A-Za-z ]//g' <<< "$(python3 --version 2>&1)"
	printf "ghc version\t" 
	sed 's/[A-Za-z ,]//g' <<< $(ghc --version)
}

#############
## Aliases ##
#############

# safety
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# the 'ls' family 
alias cl='clear && ls -hF --color'
alias ll="ls -lh --color"         # list 
alias l='ls -hF --color'          # ultra shortcut for 'ls' but with color
alias la='ls -Alh --color'        # show hidden files
alias lt='ls -ltrh --color'       # sort by date, most recent last
alias ..='cd ..' 	          # go up directory

# always expand symlinks
alias pwd='pwd -P'

# list top 10 biggest files in a place
alias bigfiles='du -a . | sort -nr | less'

# machine information
alias ncores='grep -c processor /proc/cpuinfo'
alias totram='/proc/meminfo | grep "memtotal"'
alias me='top -u `whoami`'

# file safety
backup () { cp "$1"{,.bkup}; }

# why is this not a thing natively in git?
alias git-branchcleanup="git branch --merged | grep -v '\* main' | xargs -n 1 git branch -d"

######################
## Ultra-short cuts ##
######################

# use with care, not to everybody's taste
alias v='nvim'
alias vim='nvim'
alias p='python3'
alias i='ipython3'
alias P='pre-commit run --all'


# open common filetypes with one command
o () {
  VIEWER=evince
  if hash zathura 2>/dev/null; then
    VIEWER=zathura
  fi
  # TODO: since I need to use mac, this
  # needs to default to 'open' on osx
  if [ -f $1 ] ; then
    case $1 in
      *.pdf)   $VIEWER $1  ;;
      *.eps)   $VIEWER $1  ;;
      *.ps)    $VIEWER $1  ;;
      *.png)   display $1 ;;
      *.jpg)   display $1 ;;
      *.jpeg)   display $1 ;;
      *.root)  root -l $1 ;;
    esac
  else
    echo "'$1' is not a valid file!"
  fi
}

# extract basically every type of archive
extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xvjf $1    ;;
      *.tar.gz)    tar xvzf $1    ;;
      *.bz2)       bunzip2 $1     ;;
      *.rar)       rar x $1       ;;
      *.gz)        gunzip $1      ;;
      *.tar)       tar xvf $1     ;;
      *.tbz2)      tar xvjf $1    ;;
      *.tgz)       tar xvzf $1    ;;
      *.zip)       unzip $1       ;;
      *.Z)         uncompress $1  ;;
      *.7z)        7z x $1        ;;
      *)           echo "don't know how to extract '$1'..." ;;
    esac
  else
    echo "'$1' is not a valid file!"
  fi
}

#########################
## Fix default options ##
#########################

# colored versions if things
alias grep='grep --color=auto'
if hash colorsvn 2>/dev/null; then
	alias svn="colorsvn"
fi

# scons with the 'figure out the correct directory' option
alias scons='scons -D'

# rsync with helpful
alias rsync='rsync -arvzSH'

##################
## Environment ###
##################

export VISUAL=vim
export EDITOR=vim
export SVN_EDITOR=vim
